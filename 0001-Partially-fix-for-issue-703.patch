From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Wed, 8 May 2019 13:00:00 +0200
Subject: [PATCH] Partially fix for libvips/libvips#703

Doesn't seem to be working quite yet.

diff --git a/libvips/resample/reduceh.cpp b/libvips/resample/reduceh.cpp
index 1111111..2222222 100644
--- a/libvips/resample/reduceh.cpp
+++ b/libvips/resample/reduceh.cpp
@@ -478,7 +478,7 @@ vips_reduceh_build( VipsObject *object )
 
 		vips_reduce_make_mask( reduceh->matrixf[x], 
 			reduceh->kernel, reduceh->hshrink, 
-			(float) x / VIPS_TRANSFORM_SCALE );
+			(double) x / VIPS_TRANSFORM_SCALE );
 
 		for( int i = 0; i < reduceh->n_point; i++ )
 			reduceh->matrixi[x][i] = reduceh->matrixf[x][i] * 
@@ -502,11 +502,11 @@ vips_reduceh_build( VipsObject *object )
 	 * In centre mode, we read 0.5 pixels more to the right, so we must
 	 * enlarge a little further.
 	 */
-	width = in->Xsize + reduceh->n_point - 1;
-	if( reduceh->centre )
-		width += 1;
+	int shift = reduceh->centre ? 1 : 0;
+
+	width = in->Xsize + reduceh->n_point - 1 + shift;
 	if( vips_embed( in, &t[1], 
-		reduceh->n_point / 2 - 1, 0, 
+		reduceh->n_point / 2 - 1 - shift, 0, 
 		width, in->Ysize,
 		"extend", VIPS_EXTEND_COPY,
 		(void *) NULL ) )
@@ -525,7 +525,7 @@ vips_reduceh_build( VipsObject *object )
 	 * fractional part), we just see the integer part here.
 	 */
 	resample->out->Xsize = VIPS_ROUND_UINT( 
-		resample->in->Xsize / reduceh->hshrink );
+		(double) resample->in->Xsize / reduceh->hshrink );
 	if( resample->out->Xsize <= 0 ) { 
 		vips_error( object_class->nickname, 
 			"%s", _( "image has shrunk to nothing" ) );
diff --git a/libvips/resample/reducev.cpp b/libvips/resample/reducev.cpp
index 1111111..2222222 100644
--- a/libvips/resample/reducev.cpp
+++ b/libvips/resample/reducev.cpp
@@ -736,7 +736,7 @@ vips_reducev_raw( VipsReducev *reducev, VipsImage *in, VipsImage **out )
 
 		vips_reduce_make_mask( reducev->matrixf[y],
 			reducev->kernel, reducev->vshrink, 
-			(float) y / VIPS_TRANSFORM_SCALE ); 
+			(double) y / VIPS_TRANSFORM_SCALE ); 
 
 #ifdef DEBUG
 		printf( "%6.2g", (double) y / VIPS_TRANSFORM_SCALE ); 
@@ -798,7 +798,7 @@ vips_reducev_raw( VipsReducev *reducev, VipsImage *in, VipsImage **out )
 	 * fractional part), we just see the integer part here.
 	 */
 	(*out)->Ysize = VIPS_ROUND_UINT( 
-		resample->in->Ysize / reducev->vshrink );
+		(double) resample->in->Ysize / reducev->vshrink );
 	if( (*out)->Ysize <= 0 ) { 
 		vips_error( object_class->nickname, 
 			"%s", _( "image has shrunk to nothing" ) );
@@ -863,11 +863,11 @@ vips_reducev_build( VipsObject *object )
 
 	/* Add new pixels around the input so we can interpolate at the edges.
 	 */
-	height = in->Ysize + reducev->n_point - 1;
-	if( reducev->centre )
-		height += 1;
+	int shift = reducev->centre ? 1 : 0;
+
+	height = in->Ysize + reducev->n_point - 1 + shift;
 	if( vips_embed( in, &t[1], 
-		0, reducev->n_point / 2 - 1, 
+		0, reducev->n_point / 2 - 1 - shift, 
 		in->Xsize, height, 
 		"extend", VIPS_EXTEND_COPY,
 		(void *) NULL ) )
